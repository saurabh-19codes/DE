import React, { useState } from 'react';
import './RefineFeatureForm.scss';

const RefineFeatureForm = () => {
  const [formData, setFormData] = useState({
    featureName: 'Feature name original',
    description: 'Feature description standardized v1',
    acceptanceCriteria: 'acceptance criteria standardized v1',
    question1: '',
    question2: '',
    question5: ''
  });

  const handleInputChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleBack = () => {
    console.log('Back clicked');
  };

  const handleSave = () => {
    console.log('Save clicked', formData);
  };

  const handleNext = () => {
    console.log('Next clicked', formData);
  };

  return (
    <div className="refine-feature-container">
      <div className="form-wrapper">
        <h1 className="title">REFINE FEATURE DETAILS</h1>
        
        <div className="form-content">
          <h2 className="section-title">Additional Details</h2>
          
          <div className="form-group">
            <label className="field-label">Feature Name :</label>
            <input
              type="text"
              className="form-input"
              value={formData.featureName}
              onChange={(e) => handleInputChange('featureName', e.target.value)}
            />
          </div>

          <div className="form-group">
            <label className="field-label">Description :</label>
            <input
              type="text"
              className="form-input"
              value={formData.description}
              onChange={(e) => handleInputChange('description', e.target.value)}
            />
          </div>

          <div className="form-group">
            <label className="field-label">Acceptance Criteria :</label>
            <input
              type="text"
              className="form-input"
              value={formData.acceptanceCriteria}
              onChange={(e) => handleInputChange('acceptanceCriteria', e.target.value)}
            />
          </div>

          <div className="score-section">
            <span className="score-label">Current Score : </span>
            <span className="score-value">6.23/10</span>
          </div>

          <p className="optional-text">
            Provide additional details to increase the quality of the feature (Optional)
          </p>

          <div className="form-group">
            <label className="question-label">Question 1</label>
            <input
              type="text"
              className="form-input"
              placeholder="Enter your response"
              value={formData.question1}
              onChange={(e) => handleInputChange('question1', e.target.value)}
            />
          </div>

          <div className="form-group">
            <label className="question-label">Question 2</label>
            <input
              type="text"
              className="form-input"
              placeholder="Enter your response"
              value={formData.question2}
              onChange={(e) => handleInputChange('question2', e.target.value)}
            />
          </div>

          <div className="dots-indicator">
            <div className="dot active"></div>
            <div className="dot"></div>
            <div className="dot"></div>
          </div>

          <div className="form-group">
            <label className="question-label">Question 5</label>
            <input
              type="text"
              className="form-input"
              placeholder="Enter your response"
              value={formData.question5}
              onChange={(e) => handleInputChange('question5', e.target.value)}
            />
          </div>

          <div className="button-group">
            <button className="btn btn-back" onClick={handleBack}>
              BACK
            </button>
            <button className="btn btn-save" onClick={handleSave}>
              SAVE
            </button>
            <button className="btn btn-next" onClick={handleNext}>
              NEXT
            </button>
          </div>

          <div className="footer-text">
            <span>AutoGenAI</span>
            <span>/opt/domino/feature</span>
          </div>
        </div>
      </div>

      <style jsx>{`
        .refine-feature-container {
          min-height: 100vh;
          background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 20px;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .form-wrapper {
          background: #f5f5f5;
          border-radius: 12px;
          padding: 40px;
          box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
          width: 100%;
          max-width: 800px;
          border: 2px solid #4a90e2;
        }

        .title {
          color: #4a90e2;
          font-size: 24px;
          font-weight: bold;
          text-align: center;
          margin-bottom: 30px;
          letter-spacing: 1px;
        }

        .form-content {
          background: rgba(255, 255, 255, 0.9);
          padding: 30px;
          border-radius: 8px;
          border: 2px solid #4a90e2;
        }

        .section-title {
          color: #4a90e2;
          font-size: 18px;
          font-weight: bold;
          margin-bottom: 25px;
        }

        .form-group {
          margin-bottom: 20px;
        }

        .field-label, .question-label {
          display: block;
          color: #4a90e2;
          font-weight: 600;
          margin-bottom: 8px;
          font-size: 14px;
        }

        .form-input {
          width: 100%;
          padding: 12px 16px;
          border: 2px solid #4a90e2;
          border-radius: 6px;
          background: white;
          font-size: 14px;
          color: #666;
          box-sizing: border-box;
          transition: all 0.2s ease;
        }

        .form-input:focus {
          outline: none;
          border-color: #357abd;
          box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
        }

        .form-input::placeholder {
          color: #999;
          font-style: italic;
        }

        .score-section {
          margin: 25px 0;
          font-size: 16px;
        }

        .score-label {
          color: #4a90e2;
          font-weight: 600;
        }

        .score-value {
          color: #4a90e2;
          font-weight: bold;
          font-size: 18px;
        }

        .optional-text {
          color: #4a90e2;
          font-size: 14px;
          margin: 20px 0;
          font-style: italic;
        }

        .dots-indicator {
          display: flex;
          gap: 8px;
          justify-content: center;
          margin: 25px 0;
        }

        .dot {
          width: 8px;
          height: 8px;
          border-radius: 50%;
          background: #ccc;
          transition: background-color 0.2s ease;
        }

        .dot.active {
          background: #4a90e2;
        }

        .button-group {
          display: flex;
          justify-content: space-between;
          margin-top: 40px;
          gap: 20px;
        }

        .btn {
          padding: 12px 30px;
          border: none;
          border-radius: 6px;
          font-weight: bold;
          cursor: pointer;
          transition: all 0.2s ease;
          text-transform: uppercase;
          letter-spacing: 0.5px;
          font-size: 14px;
        }

        .btn-back {
          background: #e0e0e0;
          color: #666;
          border: 2px solid #ccc;
        }

        .btn-back:hover {
          background: #d0d0d0;
          border-color: #999;
        }

        .btn-save, .btn-next {
          background: #4a90e2;
          color: white;
          border: 2px solid #4a90e2;
        }

        .btn-save:hover, .btn-next:hover {
          background: #357abd;
          border-color: #357abd;
          transform: translateY(-1px);
          box-shadow: 0 4px 8px rgba(74, 144, 226, 0.3);
        }

        .footer-text {
          text-align: right;
          margin-top: 20px;
          font-size: 12px;
          color: #ff6b35;
          font-weight: 500;
        }

        .footer-text span:first-child {
          margin-right: 5px;
        }

        @media (max-width: 768px) {
          .form-wrapper {
            padding: 20px;
          }

          .form-content {
            padding: 20px;
          }

          .button-group {
            flex-direction: column;
            gap: 10px;
          }

          .btn {
            width: 100%;
          }
        }
      `}</style>
    </div>
  );
};

export default RefineFeatureForm;
